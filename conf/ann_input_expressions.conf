# File generated by make_ann_input_expressions.sh
ann_basic_all_lcase_word_count = "added_all_lcase_word_count / added_word_count";
ann_prev_all_lcase_word_count = "previous_all_lcase_word_count / previous_word_count";
ann_all_lcase_word_count = "added_all_lcase_word_count / added_word_count / (previous_all_lcase_word_count / previous_word_count + 1.0)";
ann_removed_all_lcase_word_count = "removed_all_lcase_word_count / removed_word_count / (previous_all_lcase_word_count / previous_word_count + 1.0)";
ann_added_cnt_all_lcase_word_count = "added_all_lcase_word_count / 20 ";
ann_basic_common_words = "added_common_words / added_word_count";
ann_prev_common_words = "previous_common_words / previous_word_count";
ann_common_words = "added_common_words / added_word_count / (previous_common_words / previous_word_count + 1.0)";
ann_removed_common_words = "removed_common_words / removed_word_count / (previous_common_words / previous_word_count + 1.0)";
ann_added_cnt_common_words = "added_common_words / 20 ";
ann_basic_distinct_word_count = "added_distinct_word_count / added_word_count";
ann_prev_distinct_word_count = "previous_distinct_word_count / previous_word_count";
ann_distinct_word_count = "added_distinct_word_count / added_word_count / (previous_distinct_word_count / previous_word_count + 1.0)";
ann_removed_distinct_word_count = "removed_distinct_word_count / removed_word_count / (previous_distinct_word_count / previous_word_count + 1.0)";
ann_added_cnt_distinct_word_count = "added_distinct_word_count / 20 ";
ann_basic_first_ucase_word_count = "added_first_ucase_word_count / added_word_count";
ann_prev_first_ucase_word_count = "previous_first_ucase_word_count / previous_word_count";
ann_first_ucase_word_count = "added_first_ucase_word_count / added_word_count / (previous_first_ucase_word_count / previous_word_count + 1.0)";
ann_removed_first_ucase_word_count = "removed_first_ucase_word_count / removed_word_count / (previous_first_ucase_word_count / previous_word_count + 1.0)";
ann_added_cnt_first_ucase_word_count = "added_first_ucase_word_count / 20 ";
ann_basic_max_word_repeats = "added_max_word_repeats / added_word_count";
ann_prev_max_word_repeats = "previous_max_word_repeats / previous_word_count";
ann_max_word_repeats = "added_max_word_repeats / added_word_count / (previous_max_word_repeats / previous_word_count + 1.0)";
ann_removed_max_word_repeats = "removed_max_word_repeats / removed_word_count / (previous_max_word_repeats / previous_word_count + 1.0)";
ann_added_cnt_max_word_repeats = "added_max_word_repeats / 20 ";
ann_basic_middle_ucase_word_count = "added_middle_ucase_word_count / added_word_count";
ann_prev_middle_ucase_word_count = "previous_middle_ucase_word_count / previous_word_count";
ann_middle_ucase_word_count = "added_middle_ucase_word_count / added_word_count / (previous_middle_ucase_word_count / previous_word_count + 1.0)";
ann_removed_middle_ucase_word_count = "removed_middle_ucase_word_count / removed_word_count / (previous_middle_ucase_word_count / previous_word_count + 1.0)";
ann_added_cnt_middle_ucase_word_count = "added_middle_ucase_word_count / 20 ";
ann_basic_novowels_word_count = "added_novowels_word_count / added_word_count";
ann_prev_novowels_word_count = "previous_novowels_word_count / previous_word_count";
ann_novowels_word_count = "added_novowels_word_count / added_word_count / (previous_novowels_word_count / previous_word_count + 1.0)";
ann_removed_novowels_word_count = "removed_novowels_word_count / removed_word_count / (previous_novowels_word_count / previous_word_count + 1.0)";
ann_added_cnt_novowels_word_count = "added_novowels_word_count / 20 ";
ann_basic_numeric_word_count = "added_numeric_word_count / added_word_count";
ann_prev_numeric_word_count = "previous_numeric_word_count / previous_word_count";
ann_numeric_word_count = "added_numeric_word_count / added_word_count / (previous_numeric_word_count / previous_word_count + 1.0)";
ann_removed_numeric_word_count = "removed_numeric_word_count / removed_word_count / (previous_numeric_word_count / previous_word_count + 1.0)";
ann_added_cnt_numeric_word_count = "added_numeric_word_count / 20 ";
ann_basic_part_numeric_word_count = "added_part_numeric_word_count / added_word_count";
ann_prev_part_numeric_word_count = "previous_part_numeric_word_count / previous_word_count";
ann_part_numeric_word_count = "added_part_numeric_word_count / added_word_count / (previous_part_numeric_word_count / previous_word_count + 1.0)";
ann_removed_part_numeric_word_count = "removed_part_numeric_word_count / removed_word_count / (previous_part_numeric_word_count / previous_word_count + 1.0)";
ann_added_cnt_part_numeric_word_count = "added_part_numeric_word_count / 20 ";
ann_basic_acceptable_allcaps_words = "added_acceptable_allcaps_words / added_word_count";
ann_prev_acceptable_allcaps_words = "previous_acceptable_allcaps_words / previous_word_count";
ann_acceptable_allcaps_words = "added_acceptable_allcaps_words / added_word_count / (previous_acceptable_allcaps_words / previous_word_count + 1.0)";
ann_removed_acceptable_allcaps_words = "removed_acceptable_allcaps_words / removed_word_count / (previous_acceptable_allcaps_words / previous_word_count + 1.0)";
ann_added_cnt_acceptable_allcaps_words = "added_acceptable_allcaps_words / 20 ";
ann_basic_lcase_i_words = "added_lcase_i_words / added_word_count";
ann_prev_lcase_i_words = "previous_lcase_i_words / previous_word_count";
ann_lcase_i_words = "added_lcase_i_words / added_word_count / (previous_lcase_i_words / previous_word_count + 1.0)";
ann_removed_lcase_i_words = "removed_lcase_i_words / removed_word_count / (previous_lcase_i_words / previous_word_count + 1.0)";
ann_added_cnt_lcase_i_words = "added_lcase_i_words / 20 ";
ann_basic_improper_contractions = "added_improper_contractions / added_word_count";
ann_prev_improper_contractions = "previous_improper_contractions / previous_word_count";
ann_improper_contractions = "added_improper_contractions / added_word_count / (previous_improper_contractions / previous_word_count + 1.0)";
ann_removed_improper_contractions = "removed_improper_contractions / removed_word_count / (previous_improper_contractions / previous_word_count + 1.0)";
ann_added_cnt_improper_contractions = "added_improper_contractions / 20 ";
ann_basic_first_names = "added_first_names / added_word_count";
ann_prev_first_names = "previous_first_names / previous_word_count";
ann_first_names = "added_first_names / added_word_count / (previous_first_names / previous_word_count + 1.0)";
ann_removed_first_names = "removed_first_names / removed_word_count / (previous_first_names / previous_word_count + 1.0)";
ann_added_cnt_first_names = "added_first_names / 20 ";
ann_basic_language_abbrev = "added_language_abbrev / added_word_count";
ann_prev_language_abbrev = "previous_language_abbrev / previous_word_count";
ann_language_abbrev = "added_language_abbrev / added_word_count / (previous_language_abbrev / previous_word_count + 1.0)";
ann_removed_language_abbrev = "removed_language_abbrev / removed_word_count / (previous_language_abbrev / previous_word_count + 1.0)";
ann_added_cnt_language_abbrev = "added_language_abbrev / 20 ";
ann_alpha_surrounded_digit_count_add = "(current_alpha_surrounded_digit_count - previous_alpha_surrounded_digit_count) / current_text_size";
ann_alpha_surrounded_digit_count_rem = "(previous_alpha_surrounded_digit_count - current_alpha_surrounded_digit_count) / previous_text_size";
ann_alpha_surrounded_digit_count_cnt = "(current_alpha_surrounded_digit_count - previous_alpha_surrounded_digit_count) / 10";
ann_alpha_surrounded_digit_count_prev = "previous_alpha_surrounded_digit_count / previous_text_size";
ann_alpha_surrounded_punctuation_count_add = "(current_alpha_surrounded_punctuation_count - previous_alpha_surrounded_punctuation_count) / current_text_size";
ann_alpha_surrounded_punctuation_count_rem = "(previous_alpha_surrounded_punctuation_count - current_alpha_surrounded_punctuation_count) / previous_text_size";
ann_alpha_surrounded_punctuation_count_cnt = "(current_alpha_surrounded_punctuation_count - previous_alpha_surrounded_punctuation_count) / 10";
ann_alpha_surrounded_punctuation_count_prev = "previous_alpha_surrounded_punctuation_count / previous_text_size";
ann_charcount_at_add = "(current_charcount_at - previous_charcount_at) / current_text_size";
ann_charcount_at_rem = "(previous_charcount_at - current_charcount_at) / previous_text_size";
ann_charcount_at_cnt = "(current_charcount_at - previous_charcount_at) / 10";
ann_charcount_at_prev = "previous_charcount_at / previous_text_size";
ann_charcount_bracket_add = "(current_charcount_bracket - previous_charcount_bracket) / current_text_size";
ann_charcount_bracket_rem = "(previous_charcount_bracket - current_charcount_bracket) / previous_text_size";
ann_charcount_bracket_cnt = "(current_charcount_bracket - previous_charcount_bracket) / 10";
ann_charcount_bracket_prev = "previous_charcount_bracket / previous_text_size";
ann_charcount_comma_add = "(current_charcount_comma - previous_charcount_comma) / current_text_size";
ann_charcount_comma_rem = "(previous_charcount_comma - current_charcount_comma) / previous_text_size";
ann_charcount_comma_cnt = "(current_charcount_comma - previous_charcount_comma) / 10";
ann_charcount_comma_prev = "previous_charcount_comma / previous_text_size";
ann_charcount_exclamationpoint_add = "(current_charcount_exclamationpoint - previous_charcount_exclamationpoint) / current_text_size";
ann_charcount_exclamationpoint_rem = "(previous_charcount_exclamationpoint - current_charcount_exclamationpoint) / previous_text_size";
ann_charcount_exclamationpoint_cnt = "(current_charcount_exclamationpoint - previous_charcount_exclamationpoint) / 10";
ann_charcount_exclamationpoint_prev = "previous_charcount_exclamationpoint / previous_text_size";
ann_charcount_period_add = "(current_charcount_period - previous_charcount_period) / current_text_size";
ann_charcount_period_rem = "(previous_charcount_period - current_charcount_period) / previous_text_size";
ann_charcount_period_cnt = "(current_charcount_period - previous_charcount_period) / 10";
ann_charcount_period_prev = "previous_charcount_period / previous_text_size";
ann_charcount_qmark_add = "(current_charcount_qmark - previous_charcount_qmark) / current_text_size";
ann_charcount_qmark_rem = "(previous_charcount_qmark - current_charcount_qmark) / previous_text_size";
ann_charcount_qmark_cnt = "(current_charcount_qmark - previous_charcount_qmark) / 10";
ann_charcount_qmark_prev = "previous_charcount_qmark / previous_text_size";
ann_charcount_rawcapitals_add = "(current_charcount_rawcapitals - previous_charcount_rawcapitals) / current_text_size";
ann_charcount_rawcapitals_rem = "(previous_charcount_rawcapitals - current_charcount_rawcapitals) / previous_text_size";
ann_charcount_rawcapitals_cnt = "(current_charcount_rawcapitals - previous_charcount_rawcapitals) / 10";
ann_charcount_rawcapitals_prev = "previous_charcount_rawcapitals / previous_text_size";
ann_charcount_rawdigit_add = "(current_charcount_rawdigit - previous_charcount_rawdigit) / current_text_size";
ann_charcount_rawdigit_rem = "(previous_charcount_rawdigit - current_charcount_rawdigit) / previous_text_size";
ann_charcount_rawdigit_cnt = "(current_charcount_rawdigit - previous_charcount_rawdigit) / 10";
ann_charcount_rawdigit_prev = "previous_charcount_rawdigit / previous_text_size";
ann_charcount_rawlowercase_add = "(current_charcount_rawlowercase - previous_charcount_rawlowercase) / current_text_size";
ann_charcount_rawlowercase_rem = "(previous_charcount_rawlowercase - current_charcount_rawlowercase) / previous_text_size";
ann_charcount_rawlowercase_cnt = "(current_charcount_rawlowercase - previous_charcount_rawlowercase) / 10";
ann_charcount_rawlowercase_prev = "previous_charcount_rawlowercase / previous_text_size";
ann_charcount_space_add = "(current_charcount_space - previous_charcount_space) / current_text_size";
ann_charcount_space_rem = "(previous_charcount_space - current_charcount_space) / previous_text_size";
ann_charcount_space_cnt = "(current_charcount_space - previous_charcount_space) / 10";
ann_charcount_space_prev = "previous_charcount_space / previous_text_size";
ann_charcount_wikichar_add = "(current_charcount_wikichar - previous_charcount_wikichar) / current_text_size";
ann_charcount_wikichar_rem = "(previous_charcount_wikichar - current_charcount_wikichar) / previous_text_size";
ann_charcount_wikichar_cnt = "(current_charcount_wikichar - previous_charcount_wikichar) / 10";
ann_charcount_wikichar_prev = "previous_charcount_wikichar / previous_text_size";
ann_charcount_quote_add = "(current_charcount_quote - previous_charcount_quote) / current_text_size";
ann_charcount_quote_rem = "(previous_charcount_quote - current_charcount_quote) / previous_text_size";
ann_charcount_quote_cnt = "(current_charcount_quote - previous_charcount_quote) / 10";
ann_charcount_quote_prev = "previous_charcount_quote / previous_text_size";
ann_charcount_apostrophe_add = "(current_charcount_apostrophe - previous_charcount_apostrophe) / current_text_size";
ann_charcount_apostrophe_rem = "(previous_charcount_apostrophe - current_charcount_apostrophe) / previous_text_size";
ann_charcount_apostrophe_cnt = "(current_charcount_apostrophe - previous_charcount_apostrophe) / 10";
ann_charcount_apostrophe_prev = "previous_charcount_apostrophe / previous_text_size";
ann_added_extlink_count = ".16666666 * (current_extlink_count - previous_extlink_count) + 0";
ann_removed_extlink_count = ".16666666 * (previous_extlink_count - current_extlink_count) + 0";
ann_previous_extlink_count = ".16666666 * previous_extlink_count + 0";
ann_added_html_count = ".06250000 * (current_html_count - previous_html_count) + 0";
ann_removed_html_count = ".06250000 * (previous_html_count - current_html_count) + 0";
ann_previous_html_count = ".06250000 * previous_html_count + 0";
ann_added_punctuation_series_count = ".03125000 * (current_punctuation_series_count - previous_punctuation_series_count) + 0";
ann_removed_punctuation_series_count = ".03125000 * (previous_punctuation_series_count - current_punctuation_series_count) + 0";
ann_previous_punctuation_series_count = ".03125000 * previous_punctuation_series_count + 0";
ann_added_uncapitalized_sentence_count = ".06250000 * (current_uncapitalized_sentence_count - previous_uncapitalized_sentence_count) + 0";
ann_removed_uncapitalized_sentence_count = ".06250000 * (previous_uncapitalized_sentence_count - current_uncapitalized_sentence_count) + 0";
ann_previous_uncapitalized_sentence_count = ".06250000 * previous_uncapitalized_sentence_count + 0";
ann_added_unterminated_sentence_count = ".06250000 * (current_unterminated_sentence_count - previous_unterminated_sentence_count) + 0";
ann_removed_unterminated_sentence_count = ".06250000 * (previous_unterminated_sentence_count - current_unterminated_sentence_count) + 0";
ann_previous_unterminated_sentence_count = ".06250000 * previous_unterminated_sentence_count + 0";
ann_added_wikilink_count = ".05000000 * (current_wikilink_count - previous_wikilink_count) + 0";
ann_removed_wikilink_count = ".05000000 * (previous_wikilink_count - current_wikilink_count) + 0";
ann_previous_wikilink_count = ".05000000 * previous_wikilink_count + 0";
ann_added_wikimarkup_formatting_count = ".01562500 * (current_wikimarkup_formatting_count - previous_wikimarkup_formatting_count) + 0";
ann_removed_wikimarkup_formatting_count = ".01562500 * (previous_wikimarkup_formatting_count - current_wikimarkup_formatting_count) + 0";
ann_previous_wikimarkup_formatting_count = ".01562500 * previous_wikimarkup_formatting_count + 0";
ann_added_template_count = ".12500000 * (current_template_count - previous_template_count) + 0";
ann_removed_template_count = ".12500000 * (previous_template_count - current_template_count) + 0";
ann_previous_template_count = ".12500000 * previous_template_count + 0";
ann_added_wikimarkup_listitem_count = ".10000000 * (current_wikimarkup_listitem_count - previous_wikimarkup_listitem_count) + 0";
ann_removed_wikimarkup_listitem_count = ".10000000 * (previous_wikimarkup_listitem_count - current_wikimarkup_listitem_count) + 0";
ann_previous_wikimarkup_listitem_count = ".10000000 * previous_wikimarkup_listitem_count + 0";
ann_added_wikimarkup_indent_count = ".10000000 * (current_wikimarkup_indent_count - previous_wikimarkup_indent_count) + 0";
ann_removed_wikimarkup_indent_count = ".10000000 * (previous_wikimarkup_indent_count - current_wikimarkup_indent_count) + 0";
ann_previous_wikimarkup_indent_count = ".10000000 * previous_wikimarkup_indent_count + 0";
ann_added_proper_pluralities = ".06250000 * (current_proper_pluralities - previous_proper_pluralities) + 0";
ann_removed_proper_pluralities = ".06250000 * (previous_proper_pluralities - current_proper_pluralities) + 0";
ann_previous_proper_pluralities = ".06250000 * previous_proper_pluralities + 0";
ann_added_redirect_count = ".50000000 * (current_redirect_count - previous_redirect_count) + 0";
ann_removed_redirect_count = ".50000000 * (previous_redirect_count - current_redirect_count) + 0";
ann_previous_redirect_count = ".50000000 * previous_redirect_count + 0";
ann_added_disambiguation = ".50000000 * (current_disambiguation - previous_disambiguation) + 0";
ann_removed_disambiguation = ".50000000 * (previous_disambiguation - current_disambiguation) + 0";
ann_previous_disambiguation = ".50000000 * previous_disambiguation + 0";
ann_added_longest_char_run = ".16666666 * added_longest_char_run + 0";
ann_added_max_all_ucase_word_len = ".06250000 * added_max_all_ucase_word_len + 0";
ann_added_max_word_len = ".03333333 * added_max_word_len + 0";
ann_comment_size = ".01000000 * comment_size + 0";
ann_user_edit_count = ".00333333 * user_edit_count + 0";
ann_added_word_count_log = "1 - 1 / (.00900000 * added_word_count + 1.00000000)";
ann_current_num_recent_edits_log = "1 - 1 / (.09000000 * current_num_recent_edits + 1.00000000)";
ann_current_num_recent_reversions_log = "1 - 1 / (.22500000 * current_num_recent_reversions + 1.00000000)";
ann_current_word_count_log = "1 - 1 / (.00900000 * current_word_count + 1.00000000)";
ann_user_edit_count_log = "1 - 1 / (.00878906 * user_edit_count + 1.00000000)";
ann_current_page_made_time = "1 - 1 / (.00000028 * (current_timestamp - current_page_made_time) + 1.00000000)";
ann_user_reg_time = "1 - 1 / (.00000028 * (current_timestamp - user_reg_time) + 1.00000000)";
ann_current_minor = "current_minor";
ann_comment_typo = "comment_typo";
ann_comment_auto = "comment_auto";
ann_comment_revert = "comment_revert";
ann_comment_common = "comment_common";
ann_main_bayes_score = "main_bayes_score";
ann_main_bayes_nwords = ".05000000 * main_bayes_nwords + 0";
ann_two_bayes_score = "two_bayes_score";
ann_two_bayes_nwords = ".05000000 * two_bayes_nwords + 0";
ann_previous_bayes_score = "previous_bayes_score";
ann_previous_bayes_nwords = ".05000000 * previous_bayes_nwords + 0";
ann_bayes_range_top = "bayes_prob_range_top / 4";
ann_bayes_range_high = "bayes_prob_range_high / added_distinct_word_count";
ann_bayes_range_mid = "bayes_prob_range_mid / added_distinct_word_count";
ann_bayes_range_low = "bayes_prob_range_low / added_distinct_word_count";
ann_distinct_pages = "user_distinct_pages / user_edit_count";
ann_user_warns = "user_warns * 2 / user_edit_count";
ann_added_reused_words = "(added_reused_words - added_common_words) / (added_word_count - added_common_words)";
ann_prev_quote_portion = "previous_quote_text_size / previous_nomarkup_text_size";
ann_added_quote_percent = "(added_word_count - added_noquote_words_size) / added_word_count";
ann_added_ucase_words = "(added_all_ucase_word_count - added_acceptable_allcaps_words) / added_word_count";
ann_removed_ucase_words = "(removed_all_ucase_word_count - removed_acceptable_allcaps_words) / removed_word_count";
ann_added_ucase_words_cnt = "(added_all_ucase_word_count - added_acceptable_allcaps_words) / 16";

