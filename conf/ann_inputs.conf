ann_input_expressions:
{
	module = "expression_eval";
	result_type = "float";
	
	expressions:
	{



ann_all_lcase_word_count = "added_all_lcase_word_count / added_word_count / (previous_all_lcase_word_count / previous_word_count + 1.0)";
ann_removed_all_lcase_word_count = "removed_all_lcase_word_count / removed_word_count / (previous_all_lcase_word_count / previous_word_count + 1.0)";
ann_all_ucase_word_count = "added_all_ucase_word_count / added_word_count / (previous_all_ucase_word_count / previous_word_count + 1.0)";
ann_removed_all_ucase_word_count = "removed_all_ucase_word_count / removed_word_count / (previous_all_ucase_word_count / previous_word_count + 1.0)";
ann_common_words = "added_common_words / added_word_count / (previous_common_words / previous_word_count + 1.0)";
ann_removed_common_words = "removed_common_words / removed_word_count / (previous_common_words / previous_word_count + 1.0)";
ann_distinct_word_count = "added_distinct_word_count / added_word_count / (previous_distinct_word_count / previous_word_count + 1.0)";
ann_removed_distinct_word_count = "removed_distinct_word_count / removed_word_count / (previous_distinct_word_count / previous_word_count + 1.0)";
ann_first_ucase_word_count = "added_first_ucase_word_count / added_word_count / (previous_first_ucase_word_count / previous_word_count + 1.0)";
ann_removed_first_ucase_word_count = "removed_first_ucase_word_count / removed_word_count / (previous_first_ucase_word_count / previous_word_count + 1.0)";
ann_max_word_repeats = "added_max_word_repeats / added_word_count / (previous_max_word_repeats / previous_word_count + 1.0)";
ann_removed_max_word_repeats = "removed_max_word_repeats / removed_word_count / (previous_max_word_repeats / previous_word_count + 1.0)";
ann_middle_ucase_word_count = "added_middle_ucase_word_count / added_word_count / (previous_middle_ucase_word_count / previous_word_count + 1.0)";
ann_removed_middle_ucase_word_count = "removed_middle_ucase_word_count / removed_word_count / (previous_middle_ucase_word_count / previous_word_count + 1.0)";
ann_novowels_word_count = "added_novowels_word_count / added_word_count / (previous_novowels_word_count / previous_word_count + 1.0)";
ann_removed_novowels_word_count = "removed_novowels_word_count / removed_word_count / (previous_novowels_word_count / previous_word_count + 1.0)";
ann_numeric_word_count = "added_numeric_word_count / added_word_count / (previous_numeric_word_count / previous_word_count + 1.0)";
ann_removed_numeric_word_count = "removed_numeric_word_count / removed_word_count / (previous_numeric_word_count / previous_word_count + 1.0)";
ann_part_numeric_word_count = "added_part_numeric_word_count / added_word_count / (previous_part_numeric_word_count / previous_word_count + 1.0)";
ann_removed_part_numeric_word_count = "removed_part_numeric_word_count / removed_word_count / (previous_part_numeric_word_count / previous_word_count + 1.0)";
ann_sex_words = "added_sex_words / added_word_count / (previous_sex_words / previous_word_count + 1.0)";
ann_removed_sex_words = "removed_sex_words / removed_word_count / (previous_sex_words / previous_word_count + 1.0)";
ann_swear_words = "added_swear_words / added_word_count / (previous_swear_words / previous_word_count + 1.0)";
ann_removed_swear_words = "removed_swear_words / removed_word_count / (previous_swear_words / previous_word_count + 1.0)";
ann_alpha_surrounded_digit_count_add = "(current_alpha_surrounded_digit_count - previous_alpha_surrounded_digit_count) / current_text_size";
ann_alpha_surrounded_digit_count_rem = "(previous_alpha_surrounded_digit_count - current_alpha_surrounded_digit_count) / previous_text_size";
ann_alpha_surrounded_digit_count_cnt = "(current_alpha_surrounded_digit_count - previous_alpha_surrounded_digit_count) / 10";
ann_alpha_surrounded_punctuation_count_add = "(current_alpha_surrounded_punctuation_count - previous_alpha_surrounded_punctuation_count) / current_text_size";
ann_alpha_surrounded_punctuation_count_rem = "(previous_alpha_surrounded_punctuation_count - current_alpha_surrounded_punctuation_count) / previous_text_size";
ann_alpha_surrounded_punctuation_count_cnt = "(current_alpha_surrounded_punctuation_count - previous_alpha_surrounded_punctuation_count) / 10";
ann_charcount_at_add = "(current_charcount_at - previous_charcount_at) / current_text_size";
ann_charcount_at_rem = "(previous_charcount_at - current_charcount_at) / previous_text_size";
ann_charcount_at_cnt = "(current_charcount_at - previous_charcount_at) / 10";
ann_charcount_bracket_add = "(current_charcount_bracket - previous_charcount_bracket) / current_text_size";
ann_charcount_bracket_rem = "(previous_charcount_bracket - current_charcount_bracket) / previous_text_size";
ann_charcount_bracket_cnt = "(current_charcount_bracket - previous_charcount_bracket) / 10";
ann_charcount_comma_add = "(current_charcount_comma - previous_charcount_comma) / current_text_size";
ann_charcount_comma_rem = "(previous_charcount_comma - current_charcount_comma) / previous_text_size";
ann_charcount_comma_cnt = "(current_charcount_comma - previous_charcount_comma) / 10";
ann_charcount_exclamationpoint_add = "(current_charcount_exclamationpoint - previous_charcount_exclamationpoint) / current_text_size";
ann_charcount_exclamationpoint_rem = "(previous_charcount_exclamationpoint - current_charcount_exclamationpoint) / previous_text_size";
ann_charcount_exclamationpoint_cnt = "(current_charcount_exclamationpoint - previous_charcount_exclamationpoint) / 10";
ann_charcount_period_add = "(current_charcount_period - previous_charcount_period) / current_text_size";
ann_charcount_period_rem = "(previous_charcount_period - current_charcount_period) / previous_text_size";
ann_charcount_period_cnt = "(current_charcount_period - previous_charcount_period) / 10";
ann_charcount_qmark_add = "(current_charcount_qmark - previous_charcount_qmark) / current_text_size";
ann_charcount_qmark_rem = "(previous_charcount_qmark - current_charcount_qmark) / previous_text_size";
ann_charcount_qmark_cnt = "(current_charcount_qmark - previous_charcount_qmark) / 10";
ann_charcount_rawcapitals_add = "(current_charcount_rawcapitals - previous_charcount_rawcapitals) / current_text_size";
ann_charcount_rawcapitals_rem = "(previous_charcount_rawcapitals - current_charcount_rawcapitals) / previous_text_size";
ann_charcount_rawcapitals_cnt = "(current_charcount_rawcapitals - previous_charcount_rawcapitals) / 10";
ann_charcount_rawdigit_add = "(current_charcount_rawdigit - previous_charcount_rawdigit) / current_text_size";
ann_charcount_rawdigit_rem = "(previous_charcount_rawdigit - current_charcount_rawdigit) / previous_text_size";
ann_charcount_rawdigit_cnt = "(current_charcount_rawdigit - previous_charcount_rawdigit) / 10";
ann_charcount_rawlowercase_add = "(current_charcount_rawlowercase - previous_charcount_rawlowercase) / current_text_size";
ann_charcount_rawlowercase_rem = "(previous_charcount_rawlowercase - current_charcount_rawlowercase) / previous_text_size";
ann_charcount_rawlowercase_cnt = "(current_charcount_rawlowercase - previous_charcount_rawlowercase) / 10";
ann_charcount_space_add = "(current_charcount_space - previous_charcount_space) / current_text_size";
ann_charcount_space_rem = "(previous_charcount_space - current_charcount_space) / previous_text_size";
ann_charcount_space_cnt = "(current_charcount_space - previous_charcount_space) / 10";
ann_charcount_wikichar_add = "(current_charcount_wikichar - previous_charcount_wikichar) / current_text_size";
ann_charcount_wikichar_rem = "(previous_charcount_wikichar - current_charcount_wikichar) / previous_text_size";
ann_charcount_wikichar_cnt = "(current_charcount_wikichar - previous_charcount_wikichar) / 10";
ann_extlink_count = ".16666666 * (current_extlink_count - previous_extlink_count) + 0";
ann_html_count = ".06250000 * (current_html_count - previous_html_count) + 0";
ann_punctuation_series_count = ".03125000 * (current_punctuation_series_count - previous_punctuation_series_count) + 0";
ann_uncapitalized_sentence_count = ".06250000 * (current_uncapitalized_sentence_count - previous_uncapitalized_sentence_count) + 0";
ann_unterminated_sentence_count = ".06250000 * (current_unterminated_sentence_count - previous_unterminated_sentence_count) + 0";
ann_wikilink_count = ".03125000 * (current_wikilink_count - previous_wikilink_count) + 0";
ann_wikimarkup_formatting_count = ".01562500 * (current_wikimarkup_formatting_count - previous_wikimarkup_formatting_count) + 0";
ann_added_longest_char_run = ".16666666 * added_longest_char_run + 0";
ann_added_max_word_len = ".03333333 * added_max_word_len + 0";
ann_comment_size = ".01000000 * comment_size + 0";
ann_added_word_count = "1 - 1 / (.00900000 * added_word_count + 1.00000000)";
ann_current_num_recent_edits = "1 - 1 / (.09000000 * current_num_recent_edits + 1.00000000)";
ann_current_num_recent_reversions = "1 - 1 / (.45000000 * current_num_recent_reversions + 1.00000000)";
ann_current_word_count = "1 - 1 / (.00900000 * current_word_count + 1.00000000)";
ann_user_distinct_pages = "1 - 1 / (.00878906 * user_distinct_pages + 1.00000000)";
ann_user_edit_count = "1 - 1 / (.00878906 * user_edit_count + 1.00000000)";
ann_current_page_made_time = "1 - 1 / (.00000028 * (current_timestamp - current_page_made_time) + 1.00000000)";
ann_user_reg_time = "1 - 1 / (.00000028 * (current_timestamp - user_reg_time) + 1.00000000)";
ann_current_minor = "current_minor";
ann_main_bayes_score = "main_bayes_score";
ann_user_warns = "user_warns * 2 / user_edit_count";



/*
ann_added_allcaps_word_percent = "added_all_ucase_word_count / added_word_count";
ann_added_common_word_percent = "added_common_words / added_word_count";
ann_added_distinct_word_percent = "added_distinct_word_count / added_word_count";
ann_added_firstcap_word_percent = "added_first_ucase_word_count
	
	
####Sexual Words#####
   ann_sexword_proportion = "added_sex_words/current_sex_words";
    ann_previous_sexwords="1 - 1/(0.001858045336306206*previous_sex_words + 1.1092530657748048)";
   ann_sexword_diffproportion="added_sex_words/added_word_count";

#####Swear Words######
   ann_swearword_proportion = "added_swear_words/current_swear_words";
    ann_previous_swearwords="1 - 1/(0.001858045336306206*previous_swear_words + 1.1092530657748048)";
  ann_swearword_diffproportion="added_swear_words/added_word_count";

######Common Words ######
  ann_commonword_proportion = "added_common_words/current_common_words";
  ann_commonword_diffproportion="added_common_words/added_word_count";

######Page Size#######
ann_previous_size = "1 - 1/(0.0016220600162206002*previous_word_count+ 1.1078669910786698)";
ann_previous_distinct = "1 - 1/(0.0016220600162206002*previous_distinct_word_count + 1.1078669910786698)";
ann_current_size = "1 - 1/(0.0016220600162206002*current_word_count+ 1.1078669910786698)";
ann_current_distinct = "1 - 1/(0.0016220600162206002*current_distinct_word_count + 1.1078669910786698)";


######Edit Size########
ann_addwordsize =  "1 - 1/(0.0016220600162206002*added_word_count+ 1.1078669910786698)";
ann_rmwordsize="1 - 1/(0.0016220600162206002*removed_word_count+ 1.1078669910786698)";

#####User Edit Counts#####
ann_user_editcount="1 - 1/(0.00027783334444666711* user_edit_count + 1.1108332777666645)";
ann_distinct_pages="user_distinct_pages/user_edit_count";


####Minor Edit######
ann_minor= "current_minor";

#####Page History#######
ann_revision_age ="1 - 1/(.0000011485064821705851* (current_timestamp-previous_timestap) + 1.1107665591664597)";
ann_page_age = "1-1/(.00000002818674990213913*(current_timestamp-current_page_made_time)+1.1111026550861405)";
ann_recent_edits = "current_num_recent_edits/9999";
ann_reversion_proportion = "current_num_recent_reversions/(current_num_recent_edits+1)";


###User Age/Reputation#####
ann_user_age="1-1/(.000000416061486323*(current_timestamp-user_reg_time)+1.1405228758169936)";
ann_user_warns = "user_warns/15";

######Word Lengths#####
ann_longest_added_word="1 - 1/(0.11111111111111112*added_max_word_len + 0.88888888888888895)";
ann_longest_previous_word="1 - 1/(0.11111111111111112*previous_max_word_len + 0.88888888888888895)";


######Word Cases#####
 ann_lcase_proportion="added_all_lcase_word_count / added_word_count";
ann_ucase_proportion="added_all_ucase_word_count/added_word_count";
ann_first_ucase_proportion=" added_first_ucase_word_count/added_word_count";
ann_middle_ucase_proportion="added_middle_ucase_word_count/added_word_count";

#####Word Distinction#####
ann_distinct_word_proportion="added_distinct_word_count/added_word_count";


####Irregular Words####
ann_novowles_proportion="added_novowels_word_count/added_word_count";
ann_numeric_proportion="added_numeric_word_count/added_word_count";
ann_part_numeric_proportion="added_part_numeric_word_count/added_word_count";

####Addition and Removal of Various Characters#####
     ann_add_rawlowercase ="(current_rawlowercase - previous_rawlowercase)/current_text_size";
    ann_rm_rawlowercase ="(previous_rawlowercase - current_rawlowercase)/previous_text_size";
    ann_add_qmark ="(current_qmark - previous_qmark)/current_text_size";
    ann_rm_qmark ="(previous_qmark - current_qmark)/previous_text_size";
    ann_add_rawdigit ="(current_rawdigit - previous_rawdigit)/current_text_size";
    ann_rm_rawdigit ="(previous_rawdigit - current_rawdigit)/previous_text_size";
    ann_add_space ="(current_space - previous_space)/current_text_size";
    ann_rm_space ="(previous_space - current_space)/previous_text_size";
    ann_add_period ="(current_period - previous_period)/current_text_size";
    ann_rm_period ="(previous_period - current_period)/previous_text_size";
    ann_add_exclamationpoint ="(current_exclamationpoint - previous_exclamationpoint)/current_text_size";
    ann_rm_exclamationpoint ="(previous_exclamationpoint - current_exclamationpoint)/previous_text_size";
    ann_add_wikichar ="(current_wikichar - previous_wikichar)/current_text_size";
    ann_rm_wikichar ="(previous_wikichar - current_wikichar)/previous_text_size";
    ann_add_bracket ="(current_bracket - previous_bracket)/current_text_size";
    ann_rm_bracket ="(previous_bracket - current_bracket)/previous_text_size";
    ann_add_comma ="(current_comma - previous_comma)/current_text_size";
    ann_rm_comma ="(previous_comma - current_comma)/previous_text_size";
    ann_add_at ="(current_at - previous_at)/current_text_size";
    ann_rm_at ="(previous_at - current_at)/previous_text_size";
    ann_add_rawcapitals ="(current_rawcapitals - previous_rawcapitals)/current_text_size";
    ann_rm_rawcapitals ="(previous_rawcapitals - current_rawcapitals)/previous_text_size";

*/

	};
};

main_ann_inputs:
{
	module = "float_set_creator";
	output = "main_ann_inputs";
	clip_low = 0.0;
	clip_high = 1.0;
	properties:
	(


"ann_all_lcase_word_count",
"ann_removed_all_lcase_word_count",
"ann_all_ucase_word_count",
"ann_removed_all_ucase_word_count",
"ann_common_words",
"ann_removed_common_words",
"ann_distinct_word_count",
"ann_removed_distinct_word_count",
"ann_first_ucase_word_count",
"ann_removed_first_ucase_word_count",
"ann_max_word_repeats",
"ann_removed_max_word_repeats",
"ann_middle_ucase_word_count",
"ann_removed_middle_ucase_word_count",
"ann_novowels_word_count",
"ann_removed_novowels_word_count",
"ann_numeric_word_count",
"ann_removed_numeric_word_count",
"ann_part_numeric_word_count",
"ann_removed_part_numeric_word_count",
"ann_sex_words",
"ann_removed_sex_words",
"ann_swear_words",
"ann_removed_swear_words",
"ann_alpha_surrounded_digit_count_add",
"ann_alpha_surrounded_digit_count_rem",
"ann_alpha_surrounded_digit_count_cnt",
"ann_alpha_surrounded_punctuation_count_add",
"ann_alpha_surrounded_punctuation_count_rem",
"ann_alpha_surrounded_punctuation_count_cnt",
"ann_charcount_at_add",
"ann_charcount_at_rem",
"ann_charcount_at_cnt",
"ann_charcount_bracket_add",
"ann_charcount_bracket_rem",
"ann_charcount_bracket_cnt",
"ann_charcount_comma_add",
"ann_charcount_comma_rem",
"ann_charcount_comma_cnt",
"ann_charcount_exclamationpoint_add",
"ann_charcount_exclamationpoint_rem",
"ann_charcount_exclamationpoint_cnt",
"ann_charcount_period_add",
"ann_charcount_period_rem",
"ann_charcount_period_cnt",
"ann_charcount_qmark_add",
"ann_charcount_qmark_rem",
"ann_charcount_qmark_cnt",
"ann_charcount_rawcapitals_add",
"ann_charcount_rawcapitals_rem",
"ann_charcount_rawcapitals_cnt",
"ann_charcount_rawdigit_add",
"ann_charcount_rawdigit_rem",
"ann_charcount_rawdigit_cnt",
"ann_charcount_rawlowercase_add",
"ann_charcount_rawlowercase_rem",
"ann_charcount_rawlowercase_cnt",
"ann_charcount_space_add",
"ann_charcount_space_rem",
"ann_charcount_space_cnt",
"ann_charcount_wikichar_add",
"ann_charcount_wikichar_rem",
"ann_charcount_wikichar_cnt",
"ann_extlink_count",
"ann_html_count",
"ann_punctuation_series_count",
"ann_uncapitalized_sentence_count",
"ann_unterminated_sentence_count",
"ann_wikilink_count",
"ann_wikimarkup_formatting_count",
"ann_added_longest_char_run",
"ann_added_max_word_len",
"ann_comment_size",
"ann_added_word_count",
"ann_current_num_recent_edits",
"ann_current_num_recent_reversions",
"ann_current_word_count",
"ann_user_distinct_pages",
"ann_user_edit_count",
"ann_current_page_made_time",
"ann_user_reg_time",
"ann_current_minor",
"ann_main_bayes_score",
"ann_user_warns"


/*
		"ann_sexword_proportion",
		"ann_previous_sexwords",
   "ann_sexword_diffproportion",
		"ann_swearword_proportion",
		"ann_previous_swearwords",
"ann_user_age",
"ann_minor",
"ann_page_age",
"ann_user_warns",
"ann_revision_age",
"ann_recent_edits",
"ann_reversion_proportion",
"ann_swearword_diffproportion",
"ann_commonword_proportion",
"ann_commonword_diffproportion",
"ann_novowles_proportion",
"ann_numeric_proportion",
"ann_part_numeric_proportion",
"ann_previous_size",
"ann_previous_distinct",
"ann_current_size",
"ann_current_distinct",
"ann_addwordsize",
"ann_rmwordsize",
"ann_user_editcount",
"ann_user_editcount",
"ann_distinct_pages",
"ann_lcase_proportion",
"ann_ucase_proportion",
"ann_middle_ucase_proportion",
 "ann_add_rawlowercase",
 "ann_add_qmark",
 "ann_add_rawdigit",
 "ann_add_space",
 "ann_add_period",
 "ann_add_exclamationpoint",
 "ann_add_wikichar",
 "ann_add_bracket",
 "ann_add_comma",
 "ann_add_at",
 "ann_add_rawcapitals",
 "main_bayes_score"
 */
	);
};

main_ann_training_outputs:
{
	module = "float_set_creator";
	output = "main_ann_outputs";
	clip_low = 0.0;
	clip_high = 1.0;
	properties:
	(
		"isvandalism"
	);
};

main_ann_run:
{
	module = "run_ann";
	ann_file = "data/main_ann.fann";
	input_set = "main_ann_inputs";
	output_set = "main_ann_outputs";
};
