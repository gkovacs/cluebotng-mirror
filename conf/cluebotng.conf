# Each chain consists of a list of edit processors
# A edit processor can be a module config block, a module name (used with blank/default configuration), or the name of another chain
chains:
{
# main chains
	live_run = ( "text_process", "word_process", "do_bayes_run", "do_ann_run", "score_aggregator", "live_vandalism_threshold", "live_network_log" );
	trial_run = ( "text_process", "word_process", "do_bayes_run", "do_ann_run", "score_aggregator", "dump_file", "make_trial_reports", "print_progress" );
	create_ann_train = ( "text_process", "word_process", "do_bayes_run", "make_ann_inputs", "main_ann_training_outputs", "main_ann_train_creator", "print_progress" );
	create_bayes_train = ( "text_process", "word_process", "main_bayes_train_creator", "two_bayes_train_creator", "print_progress" );
#	create_2bayes_train = ( "text_process", "word_process", "two_bayes_train_creator", "print_progress" );
	
	

# subchains
	text_process = ( "xml_input_converter", "standard_raw_character_counts", "wikimarkup_count", "basic_regex_metrics", "remove_markup", "text_normalizer", "comment_search" );
	# word_process = ( "standard_word_separator", "standard_word_diff", "misc_raw_word_metrics", "word_normalizer", "reused_words", "word_category_finder" );
	word_process = ( "standard_word_separator", "two_word_separator", "standard_word_diff", "two_word_diff", "misc_raw_word_metrics", "raw_word_category_finder", "word_normalizer", "reused_words", "word_category_finder" );
	make_ann_inputs = ( "ann_input_expressions", "main_ann_inputs" );
	do_ann_run = ( "make_ann_inputs", "main_ann_run", "main_ann_scorer" );
	do_bayes_run = ( "main_bayes_scorer", "two_bayes_scorer", "prev_bayes_scorer" );
	make_trial_reports = ( "trial_run_report", "write_trial_scores" );
	
# default chain
	default = ( "trial_run" );
};


live_vandalism_threshold:
{
	module = "apply_threshold";
	in = "score";
	out = "think_vandalism";
	threshold = 0.93;
};

live_network_log:
{
	module = "write_properties";
	filename = "data/livelog.txt";
	properties:
	(
		"editid",
		"think_vandalism",
		"score",
		"main_bayes_score",
		"two_bayes_score"
	);
};

threads = 16;
file_require_properties = (
	"isvandalism"
);
listen_port = 3565;
network_output_properties = (
	"editid",
	"score",
	"think_vandalism"
);

print_progress:
{
	interval = 3;
};

dump_file:
{
	module = "edit_dump";
	maxlen = 30;
	filename = "/tmp/edit_dump.xml";
};

write_trial_scores:
{
	module = "write_properties";
	filename = "trialreport/details.txt";
	properties:
	(
		"editid",
		"isvandalism",
		"score",
		"main_bayes_score",
		"main_ann_score"
	);
};

main_bayes_train_creator:
{
	module = "bayesian_training_data_creator";
	filename = "data/main_bayes_train.dat";
	words = "added_normalized_words";
	isvandprop = "isvandalism";
};

two_bayes_train_creator:
{
	module = "bayesian_training_data_creator";
	filename = "data/two_bayes_train.dat";
	words = "added_normalized_2words";
	isvandprop = "isvandalism";
};

main_ann_train_creator:
{
	module = "write_ann_training_data";
	input_set = "main_ann_inputs";
	output_set = "main_ann_outputs";
	filename = "data/main_ann_train.dat";
};

main_bayes_scorer:
{
	module = "bayesian_scorer";
	dbfile = "data/bayes.db";
	input = "added_normalized_words";
	output = "main_bayes_score";
	min_edits = 5;
	num_words = 20;
};

prev_bayes_scorer:
{
	module = "bayesian_scorer";
	dbfile = "data/bayes.db";
	input = "previous_normalized_words";
	output = "previous_bayes_score";
	min_edits = 5;
	num_words = 20;
};

two_bayes_scorer:
{
	module = "bayesian_scorer";
	dbfile = "data/two_bayes.db";
	input = "added_normalized_2words";
	output = "two_bayes_score";
	min_edits = 5;
	num_words = 20;
};

main_ann_scorer:
{
	module = "expression_eval";
	result_type = "float";
	expressions: { main_ann_score = "main_ann_outputs_0"; };
};

score_aggregator:
{
	module = "expression_eval";
	result_type = "float";
	
	expressions:
	{
		# score = "(main_bayes_score + main_ann_score) / 2";
		# score = "main_bayes_score";
		score = "main_ann_score";
	};
};

trial_run_report:
{
	isvandprop = "isvandalism";
	score = "score";
	id = "editid";
	
	report = "trialreport/report.txt";
	threshold = 0.5;
	false_positive_rate = 0.005;
	
	misclassified_file_prefix = "trialreport/";
	
	threshold_table = "trialreport/thresholdtable.txt";
	threshold_table_interval = 0.0005;
};

@include "conf/standard_modules.conf"
@include "conf/misc.conf"
@include "conf/ann_inputs.conf"
